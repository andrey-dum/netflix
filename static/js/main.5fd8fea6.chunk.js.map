{"version":3,"sources":["axios.js","components/Row/Row.jsx","requests.js","components/Navbar/index.jsx","components/Banner/Banner.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","React","useEffect","a","get","res","data","results","getData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Navbar","blackNav","setBlackNav","window","addEventListener","scrollY","removeEventListener","Banner","str","n","setMovie","randomMovie","Math","floor","random","length","fetchData","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5fd8fea6.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\"\r\n});\r\n\r\n\r\nexport default instance;","import React, { useState } from 'react';\r\nimport axios from '../../axios';\r\n\r\nimport './index.css';\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nconst Row = ({title, fetchUrl, isLargeRow}) => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState('');\r\n\r\n    React.useEffect(() => {\r\n        // axios.get(fetchUrl).then(({data}) => {\r\n        //     setMovies(data.results)\r\n        // })\r\n        async function getData() {\r\n            const res = await axios.get(fetchUrl);\r\n            setMovies(res.data.results)\r\n        }\r\n        getData()\r\n\r\n    }, [fetchUrl])\r\n\r\n    const opts = {\r\n        height: \"390\",\r\n        width: \"100%\",\r\n        playerVars: {\r\n            autoplay: 1,\r\n        }\r\n    }\r\n\r\n    const handleClick = (movie) => {\r\n        if (trailerUrl) {\r\n            setTrailerUrl('')\r\n        } else {\r\n            movieTrailer(movie?.name || \"\")\r\n            .then(url => {\r\n                // https://www.youtube.com/watch?v=XtMThdfgKqU\r\n                const urlParams = new URLSearchParams(new URL(url).search);\r\n                setTrailerUrl(urlParams.get('v'));\r\n            }).catch(error => console.log(error));\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2 className=\"row__title\">{title}</h2>\r\n            <div className=\"row__posters\">\r\n\r\n                { movies.map(movie => (\r\n               \r\n                    <img\r\n                        key={movie.id}\r\n                        onClick={() => handleClick(movie)}\r\n                        className={`row__poster ${isLargeRow && 'row__posterLarge'}`} \r\n                        src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} \r\n                        alt={movie.name} />\r\n                  \r\n                )) }\r\n\r\n            </div>\r\n            { trailerUrl && <YouTube videoId={trailerUrl} opts={opts} /> }  \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Row;\r\n","// const API_KEY = process.env.API_KEY;\r\nconst API_KEY = '3f1cf69b161c9865ecb563afc274607d';\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n   \r\n}\r\n\r\nexport default requests;","import React from 'react';\r\n\r\nimport './index.css';\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n    const [blackNav, setBlackNav] = React.useState(false);\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if (window.scrollY > 100) {\r\n                setBlackNav(true)\r\n            } else setBlackNav(false)\r\n        })\r\n        return () => {\r\n            window.removeEventListener(\"scroll\");\r\n        };\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className={`nav ${blackNav && 'nav__black'}`}>\r\n            <div className=\"nav__contents\">\r\n                <img className=\"nav__logo\" src={'https://image.tmdb.org/t/p/original/wwemzKWzjKYJFfCeiB57q3r4Bcm.svg'} alt=\"Netflix Logo\" />\r\n                <img className=\"nav__avatar\" src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" alt=\"Netflix Logo\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nimport './index.css';\r\n// import requests from './requests';\r\nimport axios from '../../axios';\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nconst Banner = ({fetchUrl}) => {\r\n    const [movie, setMovie] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        async function fetchData() {\r\n            const res = await axios.get(fetchUrl);\r\n            const randomMovie = Math.floor(Math.random() * res.data.results.length - 1);\r\n            setMovie(res.data.results[randomMovie])\r\n    \r\n        }\r\n        fetchData()\r\n\r\n    }, [fetchUrl])\r\n\r\n    function trancate(str, n) {\r\n        return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n    }\r\n\r\n    return (\r\n        <header className=\"banner\" style={{\r\n            backgroundSize: \"cover\",\r\n            backgroundImage: `url(${base_url}${movie?.backdrop_path})`,\r\n            backgroundPosition: \"center top\"\r\n            }}\r\n        >\r\n            <div className=\"banner__contents\">\r\n                <h1 className=\"banner__title\">\r\n                    { movie?.title || movie?.name || movie?.original_name }\r\n                </h1>\r\n                <div className=\"banner__buttons\">\r\n                    <button className=\"banner__button\">Play</button>\r\n                    <button className=\"banner__button\">My List</button>\r\n                </div>\r\n                    <h1 className=\"banner__description\">\r\n                        { trancate(movie?.overview, 240) }\r\n                    </h1>\r\n            </div>\r\n            <div className=\"banner--fadeBottom\"></div>\r\n\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Banner;\r\n","\nimport './App.css';\nimport Row from './components/Row/Row';\nimport requests from './requests'\nimport Navbar from './components/Navbar';\nimport Banner from './components/Banner/Banner';\n\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Navbar />\n      <Banner fetchUrl={requests.fetchNetflixOriginals}/>\n      <Row \n        title=\"NETFLIX ORIGINALS\" \n        fetchUrl={requests.fetchNetflixOriginals} \n        isLargeRow \n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}